// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SharboAPI.Infrastructure;

#nullable disable

namespace SharboAPI.Infrastructure.Migrations
{
    [DbContext(typeof(SharboDbContext))]
    partial class SharboDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0-rc.1.24451.1");

            modelBuilder.Entity("SharboAPI.Domain.Models.Entry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastModificationDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("LastModifiedById")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("LastModifiedById");

                    b.ToTable("Entries", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("SharboAPI.Domain.Models.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImagePath")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("LastModifiedById")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("LastModifiedById");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("SharboAPI.Domain.Models.GroupParticipant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("GroupParticipants");
                });

            modelBuilder.Entity("SharboAPI.Domain.Models.GroupParticipantRole", b =>
                {
                    b.Property<Guid>("GroupParticipantId")
                        .HasColumnType("TEXT");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("GroupParticipantId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("GroupParticipantRoles");
                });

            modelBuilder.Entity("SharboAPI.Domain.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RoleType")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("SharboAPI.Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SharboAPI.Domain.Models.Meme", b =>
                {
                    b.HasBaseType("SharboAPI.Domain.Models.Entry");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.ToTable("Memes", (string)null);
                });

            modelBuilder.Entity("SharboAPI.Domain.Models.Quote", b =>
                {
                    b.HasBaseType("SharboAPI.Domain.Models.Entry");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.ToTable("Quotes", (string)null);
                });

            modelBuilder.Entity("SharboAPI.Domain.Models.Situation", b =>
                {
                    b.HasBaseType("SharboAPI.Domain.Models.Entry");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.ToTable("Situations", (string)null);
                });

            modelBuilder.Entity("SharboAPI.Domain.Models.Entry", b =>
                {
                    b.HasOne("SharboAPI.Domain.Models.GroupParticipant", "CreatedBy")
                        .WithMany("CreatedEntries")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharboAPI.Domain.Models.GroupParticipant", "LastModifiedBy")
                        .WithMany("ModifiedEntries")
                        .HasForeignKey("LastModifiedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("LastModifiedBy");
                });

            modelBuilder.Entity("SharboAPI.Domain.Models.Group", b =>
                {
                    b.HasOne("SharboAPI.Domain.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharboAPI.Domain.Models.User", "LastModifiedBy")
                        .WithMany()
                        .HasForeignKey("LastModifiedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("LastModifiedBy");
                });

            modelBuilder.Entity("SharboAPI.Domain.Models.GroupParticipant", b =>
                {
                    b.HasOne("SharboAPI.Domain.Models.Group", "Group")
                        .WithMany("GroupParticipants")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharboAPI.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SharboAPI.Domain.Models.GroupParticipantRole", b =>
                {
                    b.HasOne("SharboAPI.Domain.Models.GroupParticipant", "GroupParticipant")
                        .WithMany("GroupParticipantRoles")
                        .HasForeignKey("GroupParticipantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharboAPI.Domain.Models.Role", "Role")
                        .WithMany("GroupParticipantRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GroupParticipant");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SharboAPI.Domain.Models.Meme", b =>
                {
                    b.HasOne("SharboAPI.Domain.Models.Entry", null)
                        .WithOne()
                        .HasForeignKey("SharboAPI.Domain.Models.Meme", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SharboAPI.Domain.Models.Quote", b =>
                {
                    b.HasOne("SharboAPI.Domain.Models.Entry", null)
                        .WithOne()
                        .HasForeignKey("SharboAPI.Domain.Models.Quote", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SharboAPI.Domain.Models.Situation", b =>
                {
                    b.HasOne("SharboAPI.Domain.Models.Entry", null)
                        .WithOne()
                        .HasForeignKey("SharboAPI.Domain.Models.Situation", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SharboAPI.Domain.Models.Group", b =>
                {
                    b.Navigation("GroupParticipants");
                });

            modelBuilder.Entity("SharboAPI.Domain.Models.GroupParticipant", b =>
                {
                    b.Navigation("CreatedEntries");

                    b.Navigation("GroupParticipantRoles");

                    b.Navigation("ModifiedEntries");
                });

            modelBuilder.Entity("SharboAPI.Domain.Models.Role", b =>
                {
                    b.Navigation("GroupParticipantRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
